[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "My name is Alden Kling. I am currently taking DSR002 at Pomona College."
  },
  {
    "objectID": "MarchMadness.html",
    "href": "MarchMadness.html",
    "title": "March Madness",
    "section": "",
    "text": "library(ggplot2)\nteam_results &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2024/2024-03-26/team-results.csv')\n\nRows: 236 Columns: 20\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (3): TEAM, F4PERCENT, CHAMPPERCENT\ndbl (17): TEAMID, PAKE, PAKERANK, PASE, PASERANK, GAMES, W, L, WINPERCENT, R...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nggplot(team_results, aes(y = R64, x = PAKE)) +\n  geom_point(aes(color = CHAMP), size = 3, alpha = 0.8) +\n  scale_color_gradient(low=\"lightblue\", high=\"black\") +\n  labs(\n    y = \"tournaments attended\",\n    x = \"performance against komputer expectation\",\n    title = \"Tournaments Attended Vs. Performance Against Komputer Expectation\"\n)"
  },
  {
    "objectID": "DickinsonPoems.html",
    "href": "DickinsonPoems.html",
    "title": "Dickinson’s Poems",
    "section": "",
    "text": "This is analysis of data set of all of Emily Dickinson’s poems, which can be found at https://www.gutenberg.org/files/12242/12242-h/12242-h.htm.\n\nlibrary(tidyverse)\nlibrary(viridis)\nlibrary(tidytext)\nlibrary(wordcloud2)\nlibrary(spacyr)\n\n\nlibrary(DickinsonPoems)\nfilename &lt;- list.files(system.file(\"extdata\", package = \"DickinsonPoems\"))\npoems &lt;- vector(\"character\", length(filename))\nfor(i in 1:length(filename)){\n  lines &lt;- readLines(paste(system.file(\"extdata\", package = \"DickinsonPoems\"), filename[i], sep = \"/\"))\n  lines &lt;- lines[-c(1:2)]\n  lines &lt;- lines[str_detect(lines, \"^ $\", negate = TRUE)]\n  poems[i] &lt;- str_c(lines, sep = \"\", collapse = \"| \")\n}\npoems &lt;- data.frame(id = str_remove(str_sub(filename, 15), \"^0*\"), series = str_sub(filename, 10, 10), poem = poems)\n\nInvestigating the collection of Dickinson’s poems, I first decided to organize the data as a long data frame. Each unit of observation is a poem. The table includes three columns, the series, ID, and text of the poem for each unit of observation.\n\npoems |&gt; mutate(nlines = str_count(poem, \"\\\\|\")) |&gt;\nggplot(aes(x = series, y = nlines, fill = series)) +\n  geom_boxplot() +\n  scale_fill_viridis(discrete = TRUE, alpha=0.6) +\n  geom_jitter(color=\"black\", size=0.4, alpha=0.9) +\n  labs(\n    x = \"series\",\n    y = \"number of lines\",\n    title = \"Distribution of number of Lines throughout Series\"\n  )\n\n\n\npoems |&gt; mutate(nlines = str_count(poem, \"\\\\|\")) |&gt;\nggplot(aes(x = series, y = nlines, fill = series)) +\n  geom_violin() +\n  scale_fill_viridis(discrete = TRUE, alpha=0.6) +\n    labs(\n    x = \"series\",\n    y = \"number of lines\",\n    title = \"Distribution of number of Lines throughout Series\"\n  )\n\n\n\n\nThese plots investigate the distribution of the number of lines in each poem through out each of the three series in the collection. As it turns out, the number of lines and their distribution was relatively consistent throughout series. It is notable that there are far more poems in series three than the other two. By far the most interesting detail to come out of this relatively mundane set of plots is the grouping that occurs in series three. Especially evident because of the larger sample size, there are clearly grouped tiers at 3, 7, 12, 15, 20, and 24 lines.\n\nspacy_install()\nspacy_initialize(model = \"en_core_web_sm\")\nnouns &lt;- unique((str_c(poems$poem) |&gt; tolower() |&gt;\n            spacy_parse(pos = TRUE) |&gt; unnest_tokens(word, token) |&gt;\n              filter(pos == \"NOUN\"))[[\"word\"]])\nexcluded_words &lt;- c(\"t\", \"so\", \"by\", \"be\", \"go\", \"tell\")\n\nword_freq &lt;- data.frame(text = str_c(poems$poem)) |&gt; \n  mutate(text = tolower(text)) |&gt; \n  mutate(text = str_remove_all(text, '[[:punct:]]|\\\\|')) |&gt; \n  mutate(tokens = str_split(text, \"\\\\s+\")) |&gt;\n  unnest(cols = c(tokens)) |&gt; \n  count(tokens) |&gt;\n  arrange(desc(n)) |&gt; \n  rename(word = tokens, freq = n) |&gt;\n  filter(word %in% nouns) |&gt;\n  filter(!word %in% excluded_words)\nword_freq$word[1] &lt;- toupper(word_freq$word[1])\n\nwordcloud2(data = word_freq, size = 2.5)\n\n\n\n\n\n\nNext I wanted to investigate the content of the poems. To do this, I created a word cloud of all the nouns in Dickinson’s poetry. First, I created a new data frame using the poem strings contained in my previous data frame. The new data frame is also long. Each unit of observation is a word used in the poems, and the table includes two columns, the word and how many times it appears throughout the collection. I sepperatly used the spacyr package to create a list of all the nouns that appeared in the collection. I used this, combined with a coustom list of excluded words that slipped through spacy, to filter my data frame to only include nouns. Finally, I used the wordcloud2 package to create the wordcloud."
  },
  {
    "objectID": "AmAirSucks.html",
    "href": "AmAirSucks.html",
    "title": "Does American Airlines Suck?",
    "section": "",
    "text": "Recently, every time I’ve flown on American Airlines, it feels like my plane’s departure is always delayed, leading me to wonder, does American Airlines suck? To determine if American Airlines has a statistically significant difference in average departure delay, I will conducts a permutation test of American Airlines departure delays by simulating behavior under the null hypothesis. I will use data from the ‘nycflights13’ data set. @ Wickham H (2022). nycflights13: Flights that Departed NYC in 2013. R package version 1.0.2, https://github.com/hadley/nycflights13. I will begin by finding the observed difference in average departure delay time for American Airlines. I will then simulate this result under the null hypthesis by shuffling the flight carriers, and calculating the difference in average departure delay time for flights now marked as American Airlines. I will finally calculate the p-value using this null distribution and my observed value, and I will show the null distribution compared to the observed value on a histogram.\n\nlibrary(tidyverse)\nlibrary(nycflights13)\nlibrary(purrr)\nlibrary(ggplot2)\n\n\nairline &lt;- \"AA\"\n\nobserve_diff &lt;- function(a){\n  flights |&gt;\n  group_by(carrier) |&gt;\n  summarize(mean_dep_delay = mean(dep_delay, na.rm = TRUE)) |&gt;\n  summarize(diff = mean_dep_delay[carrier == a] - mean(mean_dep_delay[carrier != a])) |&gt;\n  pull(diff)\n}\nobserved_diff &lt;- observe_diff(airline)\n\nset.seed(4747)\nn &lt;- 10000\nnull_diffs &lt;- map_dbl(1:n, ~{\n  flights |&gt;\n    mutate(shuffled_carrier = sample(flights$carrier)) |&gt;\n    group_by(shuffled_carrier) |&gt;\n    summarize(mean_dep_delay = mean(dep_delay, na.rm = TRUE)) |&gt;\n    summarize(diff = mean_dep_delay[shuffled_carrier == airline] - mean(mean_dep_delay[shuffled_carrier != airline])) |&gt;\n    pull(diff)\n})\n\np_value &lt;- mean(abs(null_diffs) &gt;= abs(observed_diff))\nprint(paste(\"P-value:\", p_value))\n\n[1] \"P-value: 0\"\n\nggplot(data = data.frame(null_diffs), aes(x = null_diffs)) +\n  geom_histogram(binwidth = 0.1, color = \"black\", fill = \"lightblue\") +\n  geom_vline(xintercept = observed_diff, color = \"red\", linetype = \"dashed\", linewidth = 1) +\n  labs(title = \"Null Distribution of Permutation Test for Average Departure Delay Time\",\n       x = \"Permuted Mean Differences in Average Departure Delay Time\",\n       y = \"Frequency\") +\n  theme_minimal() +\n  annotate(\"text\", x = observed_diff, y = 350, label = paste(\"Observed Difference -- P-value:\", p_value), color = \"red\", angle = 90, vjust = -0.5)\n\n\n\n\nThis plot shows the distribution of 10000 permutations of the difference in average departure delay under the null hypothesis. The dashed red line represents the observed difference in average departure delay. A negative x value means that average departure delays of American Airlines were less than that of other airlines.\nBy examining the plot as well as the P-value of 0, it becomes painfully obvious that American Airlines does a statistically significant difference in average departure delay, however, it is not in the direction that I hypothesized. I was hoping to validate my hypothesis by finding that American Airlines has significantly more average departure delay time than other airlines in the dataset. As it turns out, American Airlines is significantly less departure delays than other airlines in this data set.\nI originally set out to see if American Airlines had significantly worse departure delays than other airlines. To do this, I conducted a permutation test of American Airlines departure delays by simulating behavior under the null hypothesis. My hypothesis was proven false, as I found that American Airlines is significantly better departure delays than other airlines in this data set. It is important to note that American still averages positive delay time, it is just better than that of other airlines."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Alden Kling",
    "section": "",
    "text": "My name is Alden Kling, and this is my website."
  },
  {
    "objectID": "EnglishEd.html",
    "href": "EnglishEd.html",
    "title": "Education in English Towns",
    "section": "",
    "text": "library(ggplot2)\nenglish_education &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2024/2024-01-23/english_education.csv')\n\nRows: 1104 Columns: 31\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (13): town11cd, town11nm, size_flag, rgn11nm, coastal, coastal_detailed,...\ndbl (18): population_2011, ks4_2012_2013_counts, key_stage_2_attainment_scho...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nggplot(english_education, aes(y = population_2011 / 1000, x = education_score)) +\n  geom_point(aes(color = university_flag),  alpha = 0.5) +\n  scale_y_log10() +\n  labs(\n    y = \"town population (1000s)\",\n    x = \"education score\",\n    title = \"Town Population in English Towns Vs. Education Score\"\n)\n\nWarning: Removed 4 rows containing missing values or values outside the scale range\n(`geom_point()`)."
  }
]